# version: '3.9'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-db_uin_himatif}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app_password}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '3213:5432' 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d db_uin_himatif"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

  web:
    build: .
    restart: unless-stopped
    env_file: .env.production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3212:3000'
    volumes:
      - ./uploads:/app/uploads
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
